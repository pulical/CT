name: Deploy based on component
on:
    push: 
     paths: 
        - 'backend-complyscan/**'
    workflow_dispatch: 
permissions:
   id-token: write
   contents: read 
env: 
   ECR_REPOSITORY: my-ecr-repository

jobs: 
     
  build:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    permissions:
      id-token: write
      contents: read
    steps:
     - uses: actions/checkout@v3
     - name: Fetch credentials
       uses: aws-actions/configure-aws-credentials@v1
       id: my-role
       with:
          role-to-assume: ${{secrets.AWS_ROLE}}
          aws-region: ${{secrets.AWS_REGION}}
          role-session-name: github-OIDC
          role-duration-seconds: 3600
          export-variables: true
          
     - name: Login to ECR
       id: login-ecr
       run: aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_USERNAME }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
       
     
     
     - name: installing using helm
       run: |
            #OUT=$(aws sts assume-role --role-arn ${{secrets.AWS_ROLE}} --role-session-name github-OIDC)
            #export AWS_ACCESS_KEY_ID=$(echo $OUT | jq -r '.Credentials''.AccessKeyId');\
            #export AWS_SECRET_ACCESS_KEY=$(echo $OUT | jq -r '.Credentials''.SecretAccessKey');\
            #export AWS_SESSION_TOKEN=$(echo $OUT | jq -r '.Credentials''.SessionToken');
            aws sts get-caller-identity
            
            aws eks update-kubeconfig --name ${{secrets.CLUSTER_NAME}} --region ${{secrets.AWS_REGION}}
            cd backend-complyscan
            kubectl get pods
            helm upgrade --install COMPLYTRUST ./backend-complyscan
            
            
